---
- environment:
    SC_HOST: "{{ sc_host }}"
    SC_USERNAME: "{{ sc_username }}"
    SC_PASSWORD: "{{ sc_password }}"
    SC_TIMEOUT: "{{ sc_timeout }}"
  vars:
    cluster_config: "{{ sc_config[sc_host].cluster }}"

  block:
    - name: Get list of hc version updates
      scale_computing.hypercore.version_update_info:
      register: updates
    
    - name: Get initial version
      scale_computing.hypercore.cluster_info:
      register: cluster_initial

    - name: Update hc version
      scale_computing.hypercore.version_update:
        icos_version: "{{ updates.records[0].uuid}}"
      register: cluster
    - ansible.builtin.assert:
        that:
          - cluster is changed
          - cluster.record.keys() | sort == ['icos_version', 'name', 'uuid']
          - cluster.record.icos_version == updates.records[0].uuid
          - cluster.diff.before.icos_version == cluster_initial.record.name
          - cluster.diff.after.icos_version == updates.records[0].uuid
    
    - name: Get status of the latest update applied
      scale_computing.hypercore.version_update_status_info:
      register: update_status
    - ansible.builtin.assert:
        that:
          - update_status.record.status == "COMPLETE"
          - update_status.record.to_version = updates.records[0].uuid
