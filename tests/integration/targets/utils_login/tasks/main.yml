---
# Test modules are able to login to Hypercore.
# The local or oidc user accounts are supported.

# ===================================================================
# local user, from environ
- environment:
    SC_HOST: "{{ sc_host }}"
    SC_USERNAME: "{{ sc_config[sc_host].sc_username }}"
    SC_PASSWORD: "{{ sc_config[sc_host].sc_password }}"
    SC_TIMEOUT: "{{ sc_timeout }}"
    SC_AUTH_METHOD: local

  block:
    - name: Get HC3 ping - local user, from environ
      scale_computing.hypercore.api:
        action: get
        endpoint: /rest/v1/ping
      register: ping_result
    - &assert_ping_result
      name: Check ping_result
      ansible.builtin.assert:
        that:
          - ping_result is not changed
          - ping_result.record.status is defined
          - ping_result.record.status == "Active"

# ===================================================================
# local user, from cluster_instance variable
- vars:
    cluster_instance:
      host: "{{ sc_host }}"
      username: "{{ sc_config[sc_host].sc_username }}"
      password: "{{ sc_config[sc_host].sc_password }}"
      auth_method: local
  block:
    - name: Get HC3 ping - local user, from cluster_instance variable
      scale_computing.hypercore.api:
        action: get
        endpoint: /rest/v1/ping
        cluster_instance: "{{ cluster_instance }}"
      register: ping_result
    - *assert_ping_result

# ===================================================================
# OIDC user, from environ
- environment:
    SC_HOST: "{{ sc_host }}"
    SC_USERNAME: "{{ sc_config[sc_host].oidc.users[0].username }}"
    SC_PASSWORD: "{{ sc_config[sc_host].oidc.users[0].password }}"
    SC_TIMEOUT: "{{ sc_timeout }}"
    SC_AUTH_METHOD: oidc
  block:
    - name: Get HC3 ping - OIDC user, from environ
      scale_computing.hypercore.api:
        action: get
        endpoint: /rest/v1/ping
      register: ping_result
    - *assert_ping_result

# ===================================================================
# OIDC user, from cluster_instance variable
- vars:
    cluster_instance: &cluster_instance_local
      host: "{{ sc_host }}"
      username: "{{ sc_config[sc_host].oidc.users[0].username }}"
      password: "{{ sc_config[sc_host].oidc.users[0].password }}"
      auth_method: oidc
  block:
    - name: Get HC3 ping - OIDC user, from cluster_instance variable
      scale_computing.hypercore.api:
        action: get
        endpoint: /rest/v1/ping
        cluster_instance: "{{ cluster_instance }}"
      register: ping_result
    - *assert_ping_result
