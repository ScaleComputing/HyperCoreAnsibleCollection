---
# =================================================================
# Empty cluster, no email alerts
- include_tasks: helper_api_email_alert_delete_all.yml

- name: Retrieve info about Email alert recipients
  scale_computing.hypercore.email_alert_info:
  register: emails
- ansible.builtin.debug:
    var: emails
- ansible.builtin.assert:
    that:
      - emails.records == []

# =================================================================
# One email alerts
- name: API add email aa
  include_tasks: helper_api_email_alert_create_one.yml
  vars:
    email_alert_email: "{{ email_aa }}"

- name: Retrieve info about Email alert recipients
  scale_computing.hypercore.email_alert_info:
  register: emails
- ansible.builtin.debug:
    var: emails
- ansible.builtin.assert:
    that:
      - emails.records | length == 1
      - emails.records[0].keys() | sort ==
        ['alert_tag_uuid', 'email', 'latest_task_tag',
        'resend_delay', 'silent_period', 'uuid']
      - emails.records[0].email == email_aa

# =================================================================
# Two email alerts
- name: API add email bb
  include_tasks: helper_api_email_alert_create_one.yml
  vars:
    email_alert_email: "{{ email_bb }}"

- name: Retrieve info about Email alert recipients
  scale_computing.hypercore.email_alert_info:
  register: emails
- ansible.builtin.debug:
    var: emails
- ansible.builtin.assert:
    that:
      - emails.records | length == 2
      - emails.records[0].keys() | sort ==
        ['alert_tag_uuid', 'email', 'latest_task_tag',
        'resend_delay', 'silent_period', 'uuid']
      - emails.records | map(attribute='email') | sort == email_all | sort

# =================================================================
# Three email alerts - one email is duplicated
- name: API add email bb duplicated
  include_tasks: helper_api_email_alert_create_one.yml
  vars:
    email_alert_email: "{{ email_bb }}"

- name: Retrieve info about Email alert recipients
  scale_computing.hypercore.email_alert_info:
  register: emails
- ansible.builtin.debug:
    var: emails
- ansible.builtin.assert:
    that:
      - emails.records | length == 3
      - emails.records[0].keys() | sort ==
        ['alert_tag_uuid', 'email', 'latest_task_tag',
        'resend_delay', 'silent_period', 'uuid']
      - emails.records | map(attribute='email') | sort == (email_all + [email_bb]) | sort
