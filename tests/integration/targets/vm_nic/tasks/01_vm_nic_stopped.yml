---
- environment:
    SC_HOST: "{{ sc_host }}"
    SC_USERNAME: "{{ sc_config[sc_host].sc_username }}"
    SC_PASSWORD: "{{ sc_config[sc_host].sc_password }}"
    SC_TIMEOUT: "{{ sc_timeout }}"
  vars:
    vm_name: XLAB-vm_nic_CI_test_a
  block:
# ----------------------------------Cleanup--------------------------------------------------------------------------------

    - name: Delete XLAB-vm_nic_CI_test
      scale_computing.hypercore.vm: &delete-XLAB-vm_nic_CI_test
        vm_name: "{{ vm_name }}"
        state: absent
      register: result

# -----------------------------------------------------------------------------------------------------------------------
# Create VM

    - name: Create XLAB-vm_nic_CI_test
      scale_computing.hypercore.api:
        action: post
        endpoint: /rest/v1/VirDomain
        data:
          dom:
            name: "{{ vm_name }}"
            tags: Xlab,CI,test,vm_nic
            mem: 512100100
            numVCPU: 2
            # state: SHUTDOWN
          options:
            attachGuestToolsISO: False
      register: vm_created
    - ansible.builtin.assert:
        that:
          - vm_created is succeeded
          - vm_created is changed
#    - name: Power On XLAB-vm_nic_CI_test
#      scale_computing.hypercore.vm:
#        vm_name: "{{ vm_name }}"
#        state: present
#        power_state: start
#        vcpu: 2
#        memory: 512100100
#        disks: []
#        nics: []
    - &check-whole-vm
      name: Get and check whole VM info
      block:
        - name: Get info about created VM
          scale_computing.hypercore.vm_info:
            vm_name: "{{ vm_name }}"
          register: vm_info
        - name: Check info about created VM
          ansible.builtin.assert:
            that:
              - vm_info.records | length == 1
              - vm_info.records.0.vm_name == "{{ vm_name }}"
              - vm_info.records.0.tags == "Xlab,CI,test,vm_nic" | split(",")
              - vm_info.records.0.vcpu == 2
              - vm_info.records.0.memory == 512100100
              - vm_info.records.0.disks | length == 0
              # - vm_info.records.0.nics | length == 0
              - vm_info.records.0.power_state == "stopped"

# -----------------------------------------------------------------------------------------------------------------------
# Add 2 NICs
    - name: Create Nic in XLAB-vm_nic_CI_test
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ vm_name }}"
        items:
          - vlan: 1
            type: RTL8139
          - vlan: 2
            type: virtio
        state: set
      register: output
    - ansible.builtin.assert:
        that:
          - output is changed
          - output.vm_rebooted == False

    - &check-nics-2-nics
      block:
        - &Retrieve-all-Nics-on-demo-vm
          name: Retrieve all Nics on XLAB-vm_nic_CI_test
          scale_computing.hypercore.vm_nic_info:
            vm_name: "{{ vm_name }}"
          register: output
        - ansible.builtin.assert:
            that:
              - output.records | length == 2
              - output.records.0.vlan == 1
              - output.records.0.type == 'RTL8139'
              - output.records.1.vlan == 2
              - output.records.1.type == 'virtio'
    - *check-whole-vm

# ----------------------------------Idempotence check------------------------------------------------------------------------

    - name: Create Nic in XLAB-vm_nic_CI_test Idempotence
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ vm_name }}"
        items:
          - vlan: 1
            type: RTL8139
          - vlan: 2
            type: virtio
        state: set
      register: output
    - debug:
        var: output
    - ansible.builtin.assert:
        that:
          - output is not changed
          - output.vm_rebooted == False
    - *check-nics-2-nics
    - *check-whole-vm

# ----------------------------------Job-------------------------------------------------------------------------------------
# Remove 1 NIC
    - name: Delete Nic in XLAB-vm_nic_CI_test
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ vm_name }}"
        items:
          - vlan: 2
            type: virtio
        state: absent
      register: output
    - ansible.builtin.assert:
        that:
          - output is changed
          - output.vm_rebooted == False

    - &check-nics-1-nic
      block:
        - *Retrieve-all-Nics-on-demo-vm
        - ansible.builtin.assert:
            that:
              - output is not changed
              - output.records | length == 1
              - output.records.0.vlan == 1
              - output.records.0.type == 'RTL8139'
    - *check-whole-vm

# ----------------------------------Idempotence check------------------------------------------------------------------------

    - name: Delete Nic in XLAB-vm_nic_CI_test Idempotence
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ vm_name }}"
        items:
          - vlan: 2
            type: virtio
        state: absent
      register: output
    - ansible.builtin.assert:
        that:
          - output is not changed
          - output.vm_rebooted == False

    - *check-nics-1-nic
    - *check-whole-vm

# ----------------------------------Job-------------------------------------------------------------------------------------

    - name: Create Nic on vlan 2 in XLAB-vm_nic_CI_test
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ vm_name }}"
        items:
          - vlan: 2
            type: virtio
        state: present
      register: output
    - ansible.builtin.assert:
        that:
          - output is changed
          - output.vm_rebooted == False

    - *check-nics-2-nics
    - *check-whole-vm

# ----------------------------------Idempotence check------------------------------------------------------------------------

    - name: Create Nic on vlan 2 in XLAB-vm_nic_CI_test Idempotence
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ vm_name }}"
        items:
          - vlan: 2
            type: virtio
        state: present
      register: output
    - ansible.builtin.assert:
        that:
          - output is not changed
          - output.vm_rebooted == False

    - *check-nics-2-nics
    - *check-whole-vm

# ----------------------------------Job-------------------------------------------------------------------------------------

    - name: Update Nic on vlan1 in XLAB-vm_nic_CI_test
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ vm_name }}"
        items:
          - vlan: 1
            type: virtio
            vlan_new: 10
            mac_new: '01:23:45:67:89:AB'
        state: present
      register: output
    - ansible.builtin.assert:
        that:
          - output is changed
          - output.vm_rebooted == False

    - &check-nics-2-nics-new-vlan
      block:
        - *Retrieve-all-Nics-on-demo-vm
        - ansible.builtin.assert:
            that:
              - output.records | length == 2
              - output.records.0.vlan == 10
              - output.records.0.type == 'virtio'
              - output.records.0.mac == '01:23:45:67:89:AB'
              - output.records.1.vlan == 2
              - output.records.1.type == 'virtio'
              - output is not changed
    - *check-whole-vm
# ----------------------------------Idempotence check------------------------------------------------------------------------

    - name: Update Nic on vlan1 in XLAB-vm_nic_CI_test Idempotence
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ vm_name }}"
        items:
          - vlan: 1
            type: virtio
            vlan_new: 10
            mac_new: '01:23:45:67:89:AB'
        state: present
      register: output
    - ansible.builtin.assert:
        that:
          - output is not changed
          - output.vm_rebooted == False

    - *check-nics-2-nics-new-vlan
    - *check-whole-vm

# ----------------------------------Job-------------------------------------------------------------------------------------

    - name: Delete all Nics in XLAB-vm_nic_CI_test successful
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ vm_name }}"
        items: []
        state: set
      register: output
    - ansible.builtin.assert:
        that:
          - output is succeeded
          - output is changed
          - output.vm_rebooted == False

    - &check-nics-none
      block:
        - *Retrieve-all-Nics-on-demo-vm
        - ansible.builtin.assert:
            that:
              - output.records | length == 0
              - output is not changed
    - *check-whole-vm

# ----------------------------------Idempotence check------------------------------------------------------------------------

    - name: Delete all Nics in XLAB-vm_nic_CI_test successful Idempotence
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ vm_name }}"
        items: []
        state: set
      register: output
    - ansible.builtin.assert:
        that:
          - output is not changed
          - output.vm_rebooted == False

    - *check-nics-none
    - *check-whole-vm

# ----------------------------------Job-------------------------------------------------------------------------------------

    - name: Create Nic on vlan default 0, without specifying vlan in XLAB-vm_nic_CI_test
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ vm_name }}"
        items:
          - type: virtio
        state: present
      register: output
    - ansible.builtin.assert:
        that:
          - output is changed
          - output.vm_rebooted == False

    - &check-nics-1-default-vlan
      block:
        - *Retrieve-all-Nics-on-demo-vm
        - ansible.builtin.assert:
            that:
              - output.records | length == 1
              - output.records.0.vlan == 0
              - output.records.0.type == 'virtio'
              - output is not changed
    - *check-whole-vm

# ----------------------------------Idempotence check------------------------------------------------------------------------

    - name: Create Nic on vlan default 0, without specifying vlan in XLAB-vm_nic_CI_test Idempotence
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ vm_name }}"
        items:
          - type: virtio
        state: present
      register: output
    - ansible.builtin.assert:
        that:
          - output is not changed
          - output.vm_rebooted == False

    - *check-nics-1-default-vlan
    - *check-whole-vm

# ----------------------------------Cleanup----------------------------------------------------------------------------------

    - name: Delete XLAB-vm_nic_CI_test
      scale_computing.hypercore.vm: *delete-XLAB-vm_nic_CI_test
      register: output
    - ansible.builtin.assert:
        that:
          - output is changed
