---
- environment:
    SC_HOST: "{{ sc_host }}"
    SC_USERNAME: "{{ sc_username }}"
    SC_PASSWORD: "{{ sc_password }}"
    SC_TIMEOUT: "{{ sc_timeout|default(10, true) }}"

  block:
    - name: Delete snapshot schedule, if it maybe already exists from before
      scale_computing.hypercore.snapshot_schedule: &delete-schedule
        name: demo-snap-schedule
        state: absent
      register: result

    - name: Setup (create) snapshot schedule
      scale_computing.hypercore.snapshot_schedule: &create-snapshot-schedule
        name: demo-snap-schedule
        state: present
        recurrences:
          - name: weekly-tuesday
            frequency: "FREQ=WEEKLY;INTERVAL=1;BYDAY=TU"
            start: "2010-01-01 00:00:00"
            local_retention: "{{ 10 * 7*24*60*60 }}"
            remote_retention:
      register: result
    - ansible.builtin.assert:
        that:
          - result is succeeded
          - result is changed

    - name: Assert that snapshot schedule has been created
      scale_computing.hypercore.snapshot_schedule_info: &get-specific-snapshot
        name: demo-snap-schedule
      register: result
    - ansible.builtin.assert:
        that:
          - result is succeeded
          - result is not changed
          - result.records | length == 1
          - result.records.0.name == "demo-snap-schedule"
          - result.records.0.recurrences.0.name == "weekly-tuesday"
          - result.records.0.recurrences.0.frequency == "FREQ=WEEKLY;INTERVAL=1;BYDAY=TU"
          - result.records.0.recurrences.0.start == "2010-01-01 00:00:00"
          - result.records.0.recurrences.0.local_retention == {{ 10 * 7*24*60*60 }}

    - name: Setup (create) snapshot schedule (idempotency)
      scale_computing.hypercore.snapshot_schedule: *create-snapshot-schedule
      register: result
    - ansible.builtin.assert:
        that:
          - result is succeeded
          - result is not changed

    - name: Update snapshot schedule
      scale_computing.hypercore.snapshot_schedule:
        name: demo-snap-schedule
        state: present
        recurrences:
          - name: weekly-friday
            frequency: "FREQ=WEEKLY;INTERVAL=2;BYDAY=TU"
            start: "2020-01-01 00:00:00"
            local_retention: "{{ 20 * 7*24*60*60 }}"
            remote_retention:
      register: result
    - ansible.builtin.assert:
        that:
          - result is succeeded
          - result is changed
          - result.record.0.name == "demo-snap-schedule"
          - result.record.0.recurrences | length == 1
          - result.record.0.recurrences.0.name == "weekly-friday"

    - name: Assert that snapshot schedule was updated
      scale_computing.hypercore.snapshot_schedule_info: *get-specific-snapshot
      register: result
    - ansible.builtin.assert:
        that:
          - result is succeeded
          - result is not changed
          - result.records | length == 1
          - result.records.0.name == "demo-snap-schedule"
          - result.records.0.recurrences | length == 1
          - result.records.0.recurrences.0.name == "weekly-friday"
          - result.records.0.recurrences.0.frequency == "FREQ=WEEKLY;INTERVAL=2;BYDAY=TU"
          - result.records.0.recurrences.0.start == "2020-01-01 00:00:00"
          - result.records.0.recurrences.0.local_retention == {{ 20 * 7*24*60*60 }}

    - name: Delete snapshot schedule
      scale_computing.hypercore.snapshot_schedule: *delete-schedule
      register: result
    - ansible.builtin.assert:
        that:
          - result is succeeded
          - result is changed

    - name: Assert that snapshot schedule was delete successfully
      scale_computing.hypercore.snapshot_schedule_info: *get-specific-snapshot
      register: result
    - ansible.builtin.assert:
        that:
          - result is succeeded
          - result.records == []
