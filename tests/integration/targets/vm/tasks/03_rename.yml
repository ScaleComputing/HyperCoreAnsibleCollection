---
# This is a part of the vm module; testing vm rename (vm_name and vm_name_new params)
- environment:
    SC_HOST: "{{ sc_host }}"
    SC_USERNAME: "{{ sc_username }}"
    SC_PASSWORD: "{{ sc_password }}"
    SC_TIMEOUT: "{{ sc_timeout }}"
  vars:
     vm_name_a: "vm-rename-test-a"
     vm_name_b: "vm-rename-test-b"
     vm_names_all:
        - "{{ vm_name_a }}"
        - "{{ vm_name_b }}"

  block:
# ----------------------------------Cleanup--------------------------------------------------------------------------------
    - name: Delete the VMs, if they exist from before
      scale_computing.hypercore.vm:
        vm_name: "{{ item }}"
        state: absent
      loop: "{{ vm_names_all }}"

# ----------------------------------Job-------------------------------------------------------------------------------------
    # Create VM a
    - name: Create the VM {{ vm_name_a }}
      scale_computing.hypercore.vm: &create-vm-a
        vm_name: "{{ vm_name_a }}"
        state: present
        description: VM rename CI test
        tags:
          - Xlab
          - mytag1
          - mytag2
        memory: "{{ '512 MB' | human_to_bytes }}"
        vcpu: 1
        attach_guest_tools_iso: false
        power_state: stop
        disks: []
        nics: []
        boot_devices: []
      register: vm_result
    - name: Get info about VM {{ vm_name_a }}
      scale_computing.hypercore.vm_info:
        vm_name: "{{ vm_name_a }}"
      register: vm_info_a_result
    - name: Get info about VM {{ vm_name_b }}
      scale_computing.hypercore.vm_info:
        vm_name: "{{ vm_name_b }}"
      register: vm_info_b_result
    - ansible.builtin.assert:
        that:
          - vm_result is changed
          - vm_result.record.0.description == "VM rename CI test"
          - vm_result.record.0.vm_name == "{{ vm_name_a }}"
          - vm_info_a_result.records.0.description == "VM rename CI test"
          - vm_info_a_result.records.0.vm_name == "{{ vm_name_a }}"
          - vm_info_b_result.records == []

    # Rename VM a to b, no other params
    - name: Rename VM {{ vm_name_a }} to {{ vm_name_b }}
      scale_computing.hypercore.vm:
        vm_name: "{{ vm_name_a }}"
        vm_name_new: "{{ vm_name_b }}"
        state: present
        # description: VM rename CI test
        # tags:
        #   - Xlab
        #   - mytag1
        #   - mytag2
        memory: "{{ '512 MB' | human_to_bytes }}"
        vcpu: 1
        # attach_guest_tools_iso: false
        # power_state: stop
        disks: []
        nics: []
        # boot_devices: []
      register: vm_result
    - name: Get info about VM {{ vm_name_a }}
      scale_computing.hypercore.vm_info:
        vm_name: "{{ vm_name_a }}"
      register: vm_info_a_result
    - name: Get info about VM {{ vm_name_b }}
      scale_computing.hypercore.vm_info:
        vm_name: "{{ vm_name_b }}"
      register: vm_info_b_result
    - ansible.builtin.assert:
        that:
          - vm_result is changed
          - vm_result.record.0.description == "VM rename CI test"
          - vm_result.record.0.vm_name == "{{ vm_name_b }}"
          - vm_info_a_result.records == []
          - vm_info_b_result.records.0.description == "VM rename CI test"
          - vm_info_b_result.records.0.vm_name == "{{ vm_name_b }}"

# ----------------------------------Cleanup--------------------------------------------------------------------------------
    - name: Delete the VMs
      scale_computing.hypercore.vm:
        vm_name: "{{ item }}"
        state: absent
      loop: "{{ vm_names_all }}"
