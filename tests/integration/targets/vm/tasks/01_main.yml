---
- environment:
    SC_HOST: "{{ sc_host }}"
    SC_USERNAME: "{{ sc_username }}"
    SC_PASSWORD: "{{ sc_password }}"

  block:
# ----------------------------------Cleanup--------------------------------------------------------------------------------
    - name: Delete the VM with name vm-integration-test-vm, if it exists from before
      scale_computing.hypercore.vm: &delete-vm
        vm_name: vm-integration-test-vm
        state: absent
      register: result

    - name: Create a text file
      command: touch integration.txt

    - name: Create an ISO file
      command: genisoimage -output integration.iso integration.txt

    - name: Delete the ISO image (if it may exist)
      scale_computing.hypercore.iso: &delete-iso
        name: "TinyCore-vm-integration.iso"
        state: absent
      register: result

# ----------------------------------Job-------------------------------------------------------------------------------------
    - name: Upload ISO image TinyCore-vm-integration.iso to HyperCore API
      scale_computing.hypercore.iso:
        name: "TinyCore-vm-integration.iso"
        source: "integration.iso"
        state: present
      register: result

    - name: Create and start the VM with disks, nics and boot devices set. Attach ISO onto the VM.
      scale_computing.hypercore.vm: &create-vm
        vm_name: vm-integration-test-vm
        description: Demo VM
        state: present
        tags:
          - Xlab
          - mytag1
          - mytag2
        memory: "{{ '512 MB' | human_to_bytes }}"
        vcpu: 2
        attach_guest_tools_iso: false
        power_state: start
        disks:
          - type: virtio_disk
            disk_slot: 0
            size: "{{ '10.1 GB' | human_to_bytes }}"
          - type: ide_cdrom
            disk_slot: 0
            iso_name: TinyCore-vm-integration.iso
        nics:
          - vlan: 1
            type: RTL8139
          - vlan: 2
            type: virtio
        boot_devices:
          - type: virtio_disk
            disk_slot: 0
          - type: nic
            nic_vlan: 1
        machine_type: BIOS
      register: vm_created
    - ansible.builtin.assert:
        that:
          - vm_created.record.0.description == "Demo VM"
          - vm_created.record.0.memory == 536870912
          - vm_created.record.0.tags == ["Xlab", "mytag1", "mytag2"]
          - vm_created.record.0.vcpu == 2
          - vm_created.record.0.vm_name == "vm-integration-test-vm"
          - vm_created.record.0.disks | length == 2
          - vm_created.record.0.nics | length == 2
          - vm_created.record.0.nics.0.vlan == 1
          - vm_created.record.0.nics.0.type == "RTL8139"
          - vm_created.record.0.nics.1.vlan == 2
          - vm_created.record.0.nics.1.type == "virtio"
          - vm_created.record.0.disks.1.type == "ide_cdrom"
          - vm_created.record.0.disks.1.disk_slot == 0
          - vm_created.record.0.disks.0.type == "virtio_disk"
          - vm_created.record.0.disks.0.disk_slot == 0
          - vm_created.record.0.boot_devices | length == 2
          - vm_created.record.0.boot_devices.0.type == "virtio_disk"
          - vm_created.record.0.boot_devices.1.type == "RTL8139"
          - vm_created.record.0.boot_devices.0.disk_slot == 0
          - vm_created.record.0.boot_devices.1.vlan == 1
          - vm_created.record.0.power_state == "started"
          - vm_created.record.0.machine_type == "BIOS"

# ----------------------------------Idempotence check------------------------------------------------------------------------
    - name: Create the exact same VM (idempotency)
      scale_computing.hypercore.vm: *create-vm
      register: result
    - ansible.builtin.assert:
        that:
          - result is not changed

    - name: Retrieve vm-integration-test-vm Idempotence
      scale_computing.hypercore.vm_info:
        vm_name: vm-integration-test-vm
      register: vm_created
    - ansible.builtin.assert:
        that:
          - vm_created.records.0.description == "Demo VM"
          - vm_created.records.0.memory == 536870912
          - vm_created.records.0.tags == ["Xlab", "mytag1", "mytag2"]
          - vm_created.records.0.vcpu == 2
          - vm_created.records.0.vm_name == "vm-integration-test-vm"
          - vm_created.records.0.disks | length == 2
          - vm_created.records.0.nics | length == 2
          - vm_created.records.0.nics.0.vlan == 1
          - vm_created.records.0.nics.0.type == "RTL8139"
          - vm_created.records.0.nics.1.vlan == 2
          - vm_created.records.0.nics.1.type == "virtio"
          - vm_created.records.0.disks.1.type == "ide_cdrom"
          - vm_created.records.0.disks.1.disk_slot == 0
          - vm_created.records.0.disks.0.type == "virtio_disk"
          - vm_created.records.0.disks.0.disk_slot == 0
          - vm_created.records.0.boot_devices | length == 2
          - vm_created.records.0.boot_devices.0.type == "virtio_disk"
          - vm_created.records.0.boot_devices.1.type == "RTL8139"
          - vm_created.records.0.boot_devices.0.disk_slot == 0
          - vm_created.records.0.boot_devices.1.vlan == 1
          - vm_created.records.0.power_state == "started"

# ----------------------------------Job-------------------------------------------------------------------------------------
    - name: Update the VM
      scale_computing.hypercore.vm: &update-vm
        vm_name: vm-integration-test-vm
        state: present
        memory: "{{ '512 MB' | human_to_bytes }}"
        vcpu: 2
        force_reboot: true
        disks:
          - type: ide_cdrom
            disk_slot: 0
            iso_name: TinyCore-vm-integration.iso
          - type: virtio_disk
            disk_slot: 1
            size: "{{ '20 GB' | human_to_bytes }}"
          - type: virtio_disk
            disk_slot: 0
        nics: []
        boot_devices: []
      register: result
    - ansible.builtin.assert:
        that:
          - result is changed
          - result.vm_rebooted is true

    - name: Assert the VM has been updated
      scale_computing.hypercore.vm_info: &get-vm-by-name
        vm_name: vm-integration-test-vm
      register: result
    - ansible.builtin.assert:
        that:
          - result.records[0].boot_devices == []
          - result.records[0].disks.0.type == "virtio_disk"
          - result.records[0].disks.0.disk_slot == 0
          - result.records[0].disks.1.type == "ide_cdrom"
          - result.records[0].disks.1.iso_name == "TinyCore-vm-integration.iso"
          - result.records[0].disks.2.type == "virtio_disk"
          - result.records[0].disks.2.disk_slot == 1
          - result.records[0].vcpu == 2
          - result.records[0].memory == 536870912

# ----------------------------------Idempotence check------------------------------------------------------------------------
    - name: Update the VM Idempotence
      scale_computing.hypercore.vm: *update-vm
      register: result
    - ansible.builtin.assert:
        that:
        - result is not changed

    - name: Assert the VM has been updated Idempotence
      scale_computing.hypercore.vm_info: *get-vm-by-name
      register: result
    - ansible.builtin.assert:
        that:
          - result.records[0].boot_devices == []
          - result.records[0].disks.0.type == "virtio_disk"
          - result.records[0].disks.0.disk_slot == 0
          - result.records[0].disks.1.type == "ide_cdrom"
          - result.records[0].disks.1.iso_name == "TinyCore-vm-integration.iso"
          - result.records[0].disks.2.type == "virtio_disk"
          - result.records[0].disks.2.disk_slot == 1
          - result.records[0].vcpu == 2
          - result.records[0].memory == 536870912

# ----------------------------------Job-------------------------------------------------------------------------------------
    - name: Update the VM 2nd time
      scale_computing.hypercore.vm: &update-vm2
        vm_name: vm-integration-test-vm
        state: present
        memory: "{{ '512 MB' | human_to_bytes }}"
        vcpu: 2
        force_reboot: true
        disks:
          - type: ide_cdrom
            disk_slot: 0
            iso_name: TinyCore-vm-integration.iso
          - type: virtio_disk
            disk_slot: 1
            size: "{{ '20 GB' | human_to_bytes }}"
          - type: virtio_disk
            disk_slot: 0
        nics:
          - vlan: 1
            type: RTL8139
          - vlan: 2
            type: virtio
        boot_devices: []
      register: result
    - ansible.builtin.assert:
        that:
          - result is changed
          - result.vm_rebooted is true

    - name: Assert the VM has been updated 2nd time
      scale_computing.hypercore.vm_info: &get-vm-by-name2
        vm_name: vm-integration-test-vm
      register: result
    - ansible.builtin.assert:
        that:
          - result.records[0].boot_devices == []
          - result.records[0].disks.0.type == "virtio_disk"
          - result.records[0].disks.0.disk_slot == 0
          - result.records[0].disks.1.type == "ide_cdrom"
          - result.records[0].disks.1.iso_name == "TinyCore-vm-integration.iso"
          - result.records[0].disks.2.type == "virtio_disk"
          - result.records[0].disks.2.disk_slot == 1
          - result.records[0].nics | length == 2
          - result.records[0].nics.0.vlan == 1
          - result.records[0].nics.0.type == "RTL8139"
          - result.records[0].nics.1.vlan == 2
          - result.records[0].nics.1.type == "virtio"
          - result.records[0].vcpu == 2
          - result.records[0].memory == 536870912

# ----------------------------------Idempotence check------------------------------------------------------------------------
    - name: Update the VM Idempotence
      scale_computing.hypercore.vm: *update-vm2
      register: result
    - ansible.builtin.assert:
        that:
        - result is not changed

    - name: Assert the VM has been updated Idempotence
      scale_computing.hypercore.vm_info: *get-vm-by-name2
      register: result
    - ansible.builtin.assert:
        that:
          - result.records[0].boot_devices == []
          - result.records[0].disks.0.type == "virtio_disk"
          - result.records[0].disks.0.disk_slot == 0
          - result.records[0].disks.1.type == "ide_cdrom"
          - result.records[0].disks.1.iso_name == "TinyCore-vm-integration.iso"
          - result.records[0].disks.2.type == "virtio_disk"
          - result.records[0].disks.2.disk_slot == 1
          - result.records[0].nics | length == 2
          - result.records[0].nics.0.vlan == 1
          - result.records[0].nics.0.type == "RTL8139"
          - result.records[0].nics.1.vlan == 2
          - result.records[0].nics.1.type == "virtio"
          - result.records[0].vcpu == 2
          - result.records[0].memory == 536870912

# ----------------------------------Cleanup--------------------------------------------------------------------------------
    - name: Delete the VM with name vm-integration-test-vm
      scale_computing.hypercore.vm: *delete-vm
      register: result

    - name: Delete the ISO image
      scale_computing.hypercore.iso: *delete-iso
      register: result

    - name: Delete locally installed ISO image from current dir
      ansible.builtin.file:
        path: integration.iso
        state: absent
      register: file_deleted

    - name: Assert that record has been deleted
      scale_computing.hypercore.vm_info: *get-vm-by-name
      register: result
    - ansible.builtin.assert:
        that:
          - result.records == []
