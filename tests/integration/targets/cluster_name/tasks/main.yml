---
- environment:
    SC_HOST: "{{ sc_host }}"
    SC_USERNAME: "{{ sc_username }}"
    SC_PASSWORD: "{{ sc_password }}"
    SC_TIMEOUT: "{{ sc_timeout }}"

  block:
    - name: Retrieve cluster name
      scale_computing.hypercore.cluster_name_info:
      register: cluster_initial

    - name: Update cluster name
      scale_computing.hypercore.cluster_name:
        name_new: name_updated
      register: cluster
    - ansible.builtin.assert:
        that:
          - cluster is changed
          - cluster.record.keys() | sort == ['name', 'uuid']
          - cluster.record.name == "name_updated"
          - cluster.diff.before.name == cluster_initial.record.name
          - cluster.diff.after.name == "name_updated"
    
    - name: Check if cluster name is updated
      scale_computing.hypercore.cluster_name_info:
      register: cluster
    - ansible.builtin.assert:
        that:
          - cluster.record.name == "name_updated"
    
    - name: Update cluster name - idempotence
      scale_computing.hypercore.cluster_name:
        name_new: name_updated
      register: cluster
    - ansible.builtin.assert:
        that:
          - cluster is not changed
          - cluster.record.keys() | sort == ['name', 'uuid']
          - cluster.record.name == "name_updated"
          - cluster.diff.before.name == "name_updated"
          - cluster.diff.after.name == "name_updated"
    
    - name: Retrieve cluster name
      scale_computing.hypercore.cluster_name_info:
      register: cluster
    - ansible.builtin.assert:
        that:
          - cluster.record.name == "name_updated"

  always:
    - name: Set back old cluster_name
      scale_computing.hypercore.api:
        action: patch
        endpoint: /rest/v1/Cluster/{{ cluster_initial.record.uuid }}
        data:
          clusterName: "{{ cluster_initial.record.name }}"

    - name: Get current cluster name
      scale_computing.hypercore.api:
        action: get
        endpoint: /rest/v1/Cluster
      register: cluster
    - name: Show cluster
      ansible.builtin.debug:
        var: cluster
