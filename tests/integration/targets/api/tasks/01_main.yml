---
- name: Retrieve all VMs
  scale_computing.hypercore.api: &retrieve-all-vms
    action: get
    endpoint: /rest/v1/VirDomain
  register: initial

- name: Create a VM
  scale_computing.hypercore.api:
    action: post
    endpoint: /rest/v1/VirDomain
    data:
      dom:
        name: XLAB-jc1
        tags: Xlab,jc1,us1,integration-test3
        mem: 512100100
        numVCPU: 2
        blockDevs:
          - type: VIRTIO_DISK
            capacity: 8100100100
            name: jc1-disk-0
        netDevs:
          - type: RTL8139
            vlan: 0
            connected: true
      options:
        attachGuestToolsISO: true
  register: vm_created
- ansible.builtin.assert:
    that:
      - vm_created is changed

- name: Wait for the object to be created
  scale_computing.hypercore.task_wait:
    task_tag: "{{vm_created.record}}"

- name: Retrieve all VMs after creating a new resource
  scale_computing.hypercore.api: *retrieve-all-vms
  register: result
- ansible.builtin.assert:
    that:
      - result.record | length == initial.record | length + 1

- name: Update the VM
  scale_computing.hypercore.api:
    action: patch
    endpoint: /rest/v1/VirDomain/{{vm_created.record.createdUUID}}
    data:
      description: updated description
  register: vm_updated

- name: Verify VM's description has been modified
  scale_computing.hypercore.api:
    action: get
    endpoint: /rest/v1/VirDomain/{{vm_created.record.createdUUID}}
  register: result
- ansible.builtin.assert:
    that:
      - result.record.0.description == "updated description"

- name: Verify that record has been deleted
  scale_computing.hypercore.api:
    action: delete
    endpoint: /rest/v1/VirDomain/{{vm_created.record.createdUUID}}
  register: result
- ansible.builtin.assert:
    that:
      - not result.record

# This task is here to test if response 400 (client or payload's problem) or response 500 (HyperCore's error) is raised.
- name: Update the VM without any payload specified
  scale_computing.hypercore.api:
    action: patch
    endpoint: /rest/v1/VirDomain/{{vm_created.record.createdUUID}}
  register: vm_updated
  ignore_errors: True
