---
- name: Test vm_snapshot_attach_disk

  vars:
    vm_1_snapshot_label: snap-0
    vm_1: snapshot-test-vm-1 # test-snapshot_attach_disk-ana
    vm_2: snapshot-test-vm-3 # test-snapshot_attach_disk-ana-2
    slot_a: 42  # later set to 0
    slot_b: 43  # later set to 1

  block:
#    - include_tasks: helper_api_vm_snapshot_create.yml
#      vars:
#        vms_number: "{{ test_vms_number }}"

    # --------------------------------------------------------

    # Get snapshots info
    - name: Get a non-unique snapshot info of VM "{{ vm_1 }}"
      scale_computing.hypercore.vm_snapshot_info:
        label: "{{ vm_1_snapshot_label }}"
        vm_name: "{{ vm_1 }}"
      register: vm_1_snapshot_info
    - ansible.builtin.debug:
        var: vm_1_snapshot_info

    - name: Get info of VM "{{ vm_1 }}"
      scale_computing.hypercore.vm_info:
        vm_name: "{{ vm_1 }}"
      register: vm_exist_1_info

    - name: Get info of VM "{{ vm_2 }}"
      scale_computing.hypercore.vm_info:
        vm_name: "{{ vm_2 }}"
      register: vm_2_info

    # Test with existing snapshots and VMs
    # --------- Test VIRTIO_DISK to VIRTIO_DISK ---------

    - name: Attach "snap-0" from VM "{{ vm_1 }}" to VM "{{ vm_2 }}" - as VIRTIO_DISK
      scale_computing.hypercore.vm_snapshot_attach_disk:
        vm_name: "{{ vm_2 }}"
        vm_disk_type: virtio_disk
        vm_disk_slot: "{{ slot_a }}"
        source_snapshot_uuid: "{{ vm_1_snapshot_info.records[0].snapshot_uuid }}"
        source_disk_type: virtio_disk
        source_disk_slot: 1
      register: result
    - ansible.builtin.debug:
        var: result
    - ansible.builtin.assert:
        that:
          - result is changed
    - ansible.builtin.assert: &test-virtio
        that:
          - result.record.type == "VIRTIO_DISK"
          - result.record.slot == slot_a
          - result.record.vm_uuid == vm_2_info.records[0].uuid

    - name: IDEMPOTENCE - Attach "snap-0" from VM "{{ vm_1 }}" to VM "{{ vm_2 }}" - as VIRTIO_DISK
      scale_computing.hypercore.vm_snapshot_attach_disk:
        vm_name: "{{ vm_2 }}"
        vm_disk_type: virtio_disk
        vm_disk_slot: "{{ slot_a }}"
        source_snapshot_uuid: "{{ vm_1_snapshot_info.records[0].snapshot_uuid }}"
        source_disk_type: virtio_disk
        source_disk_slot: 1
      register: result
    - ansible.builtin.debug:
        var: result
    - ansible.builtin.assert:
        that:
          - result is not changed
    - ansible.builtin.assert: *test-virtio

    # --------- Test VIRTIO_DISK to SOME_OTHER_TYPE_OF_DISK ---------
    - name: Attach "snap-0" from VM "{{ vm_1 }}" to VM "{{ vm_2 }}" - as NOT VIRTIO_DISK
      scale_computing.hypercore.vm_snapshot_attach_disk:
        vm_name: "{{ vm_2 }}"
        vm_disk_type: ide_disk
        vm_disk_slot: "{{ slot_b }}"
        source_snapshot_uuid: "{{ vm_1_snapshot_info.records[0].snapshot_uuid }}"
        source_disk_type: virtio_disk
        source_disk_slot: 1
      register: result
    - ansible.builtin.debug:
        var: result
    - ansible.builtin.assert:
        that:
          - result is changed
    - ansible.builtin.assert: &test-not-virtio
        that:
          - result.record.type == "IDE_DISK"
          - result.record.slot == slot_b
          - result.record.vm_uuid == vm_2_info.records[0].uuid

    - name: IDEMPOTENCE - Attach "snap-0" from VM "{{ vm_1 }}" to VM "{{ vm_2 }}" - as NOT VIRTIO_DISK
      scale_computing.hypercore.vm_snapshot_attach_disk:
        vm_name: "{{ vm_2 }}"
        vm_disk_type: ide_disk
        vm_disk_slot: "{{ slot_b }}"
        source_snapshot_uuid: "{{ vm_1_snapshot_info.records[0].snapshot_uuid }}"
        source_disk_type: virtio_disk
        source_disk_slot: 1
      register: result
    - ansible.builtin.debug:
        var: result
    - ansible.builtin.assert:
        that:
          - result is not changed
    - ansible.builtin.assert: *test-not-virtio

# ---------------------------------------------------------------

# TODO: unit tests
#   - test with an existent snapshot and non-existent VM
#   - test with a non-existent snapshot and existent VM
#   - test with a non-existent snapshot and a non-existent VM
