---
- name: Test vm_snapshot_attach_disk

  vars:
    vm_1_snapshot_label: snap-0
    vm_1: snapshot-test-vm-1
    vm_2_label: "-attach"
    vm_2: "snapshot-test-vm-1{{ vm_2_label }}"

    # We must use next free slot on bus if we want VM to be bootable!
    slot_a: 3  # virtio_disk
    slot_b: 0  # ide_disk

    force_reboot: true  # allow forced vm shutdown

  block:
    - name: Create a stopped VM "{{ vm_2 }}"
      include_tasks: helper_api_vm_snapshot_create.yml
      vars:
        vms_number: 1
        label: "{{ vm_2_label }}"
        vm_init_state: stop

    # --------------------------------------------------------

    # Get snapshots info
    - name: Get a non-unique snapshot info of VM "{{ vm_1 }}"
      scale_computing.hypercore.vm_snapshot_info:
        label: "{{ vm_1_snapshot_label }}"
        vm_name: "{{ vm_1 }}"
      register: vm_1_snapshot_info
    - ansible.builtin.debug:
        var: vm_1_snapshot_info

    - name: Get info of VM "{{ vm_1 }}"
      scale_computing.hypercore.vm_info:
        vm_name: "{{ vm_1 }}"
      register: vm_1_info

    - name: Get info of VM "{{ vm_2 }}"
      scale_computing.hypercore.vm_info:
        vm_name: "{{ vm_2 }}"
      register: vm_2_info

    # ++++++++++++ Test attach snapshot disk from one VM to another +++++++++++
    # --------- Test VIRTIO_DISK to VIRTIO_DISK ---------

    # Test attach when vm_2 is stopped
    - name: >-
        Attach "snap-0" from VM "{{ vm_1 }}" to VM "{{ vm_2 }}" - as VIRTIO_DISK
      scale_computing.hypercore.vm_snapshot_attach_disk:
        vm_name: "{{ vm_2 }}"
        vm_disk_type: virtio_disk
        vm_disk_slot: "{{ slot_a }}"
        source_snapshot_uuid:
          "{{ vm_1_snapshot_info.records[0].snapshot_uuid }}"
        source_disk_type: virtio_disk
        source_disk_slot: 1
        force_reboot: "{{ force_reboot }}"
      register: result
    - ansible.builtin.debug:
        var: result
    - ansible.builtin.assert:
        that:
          - result is changed
    - include_tasks: helper_check_vm_state.yml
      vars:
        vm_name: "{{ vm_2 }}"
        expected_state: stopped
    - ansible.builtin.assert: &test-virtio
        that:
          - result.record.type == "virtio_disk"
          - result.record.disk_slot == slot_a
          - result.record.vm_uuid == vm_2_info.records[0].uuid

    - name: Start VM "{{ vm_2 }}"
      scale_computing.hypercore.vm_params:
        vm_name: "{{ vm_2 }}"
        power_state: start

    # Test attach when vm_2 is running
    - name: >-
        IDEMPOTENCE - Attach "snap-0" from VM "{{ vm_1 }}"
        to VM "{{ vm_2 }}" - as VIRTIO_DISK
      scale_computing.hypercore.vm_snapshot_attach_disk:
        vm_name: "{{ vm_2 }}"
        vm_disk_type: virtio_disk
        vm_disk_slot: "{{ slot_a }}"
        source_snapshot_uuid:
          "{{ vm_1_snapshot_info.records[0].snapshot_uuid }}"
        source_disk_type: virtio_disk
        source_disk_slot: 1
        force_reboot: "{{ force_reboot }}"
      register: result
    - ansible.builtin.debug:
        var: result
    - ansible.builtin.assert:
        that:
          - result is not changed
    - include_tasks: helper_check_vm_state.yml
      vars:
        vm_name: "{{ vm_2 }}"
        expected_state: started
    - ansible.builtin.assert: *test-virtio

    # >>>>>>>>>>>>>>>>>>>>
    # The rest of the tests are attaching on a running vm_2/vm_1
    # >>>>>>>>>>>>>>>>>>>>
    # --------- Test VIRTIO_DISK to SOME_OTHER_TYPE_OF_DISK ---------
    - name: >-
        Attach "snap-0" from VM "{{ vm_1 }}" to
        VM "{{ vm_2 }}" - as NOT VIRTIO_DISK
      scale_computing.hypercore.vm_snapshot_attach_disk:
        vm_name: "{{ vm_2 }}"
        vm_disk_type: ide_disk
        vm_disk_slot: "{{ slot_b }}"
        source_snapshot_uuid:
          "{{ vm_1_snapshot_info.records[0].snapshot_uuid }}"
        source_disk_type: virtio_disk
        source_disk_slot: 1
        force_reboot: "{{ force_reboot }}"
        shutdown_timeout: 10  # For faster testing. VM has no OS, so it cannot react to ACPI shutdown.
      register: result
    - ansible.builtin.debug:
        var: result
    - ansible.builtin.assert:
        that:
          - result is changed
    - include_tasks: helper_check_vm_state.yml
      vars:
        vm_name: "{{ vm_2 }}"
        expected_state: started
    - ansible.builtin.assert: &test-not-virtio
        that:
          - result.record.type == "ide_disk"
          - result.record.disk_slot == slot_b
          - result.record.vm_uuid == vm_2_info.records[0].uuid

    - name: >-
        IDEMPOTENCE - Attach "snap-0" from VM "{{ vm_1 }}"
        to VM "{{ vm_2 }}" - as NOT VIRTIO_DISK
      scale_computing.hypercore.vm_snapshot_attach_disk:
        vm_name: "{{ vm_2 }}"
        vm_disk_type: ide_disk
        vm_disk_slot: "{{ slot_b }}"
        source_snapshot_uuid:
          "{{ vm_1_snapshot_info.records[0].snapshot_uuid }}"
        source_disk_type: virtio_disk
        source_disk_slot: 1
        force_reboot: "{{ force_reboot }}"
      register: result
    - ansible.builtin.debug:
        var: result
    - ansible.builtin.assert:
        that:
          - result is not changed
    - include_tasks: helper_check_vm_state.yml
      vars:
        vm_name: "{{ vm_2 }}"
        expected_state: started
    - ansible.builtin.assert: *test-not-virtio

    # ++++++++++++ Test attach snapshot disk from a VM to itself +++++++++++++
    # This does change vm_1 (snapshot-test-vm-1), because of this whole 03_vm_snapshot_attach_disk.yml
    # requires snapshot-test-vm-1 to be deleted and recreated each time.
    # Refactor test if you do not like this.

    - name: >-
        Attach "snap-0" from VM "{{ vm_1 }}"
        to VM "{{ vm_1 }}"
      scale_computing.hypercore.vm_snapshot_attach_disk:
        vm_name: "{{ vm_1 }}"
        vm_disk_type: virtio_disk
        vm_disk_slot: "{{ slot_a }}"
        source_snapshot_uuid:
          "{{ vm_1_snapshot_info.records[0].snapshot_uuid }}"
        source_disk_type: virtio_disk
        source_disk_slot: 1
        force_reboot: "{{ force_reboot }}"
      register: result
    - ansible.builtin.debug:
        var: result
    - ansible.builtin.assert:
        that:
          - result is changed
    - include_tasks: helper_check_vm_state.yml
      vars:
        vm_name: "{{ vm_1 }}"
        expected_state: started
    - ansible.builtin.assert: &test-virtio-2
        that:
          - result.record.type == "virtio_disk"
          - result.record.disk_slot == slot_a
          - result.record.vm_uuid == vm_1_info.records[0].uuid

    - name: >-
        IDEMPOTENCE - Attach "snap-0" from VM "{{ vm_1 }}"
        to VM "{{ vm_1 }}"
      scale_computing.hypercore.vm_snapshot_attach_disk:
        vm_name: "{{ vm_1 }}"
        vm_disk_type: virtio_disk
        vm_disk_slot: "{{ slot_a }}"
        source_snapshot_uuid:
          "{{ vm_1_snapshot_info.records[0].snapshot_uuid }}"
        source_disk_type: virtio_disk
        source_disk_slot: 1
        force_reboot: "{{ force_reboot }}"
      register: result
    - ansible.builtin.debug:
        var: result
    - include_tasks: helper_check_vm_state.yml
      vars:
        vm_name: "{{ vm_1 }}"
        expected_state: started
    - ansible.builtin.assert:
        that:
          - result is not changed
    - ansible.builtin.assert: *test-virtio-2

# ---------- Cleanup ------------
  always:
    - name: Remove snapshot attach testing VM "{{ vm_2 }}"
      scale_computing.hypercore.vm:
        vm_name: "{{ vm_2 }}"
        state: absent
