---
- environment:
    SC_HOST: "{{ sc_host }}"
    SC_USERNAME: "{{ sc_username }}"
    SC_PASSWORD: "{{ sc_password }}"
    SC_TIMEOUT: "{{ sc_timeout|default(10, true) }}"

  vars:
    name: XLAB-vm_nic_info_CI_test


  block:
    - name: Delete VM with name XLAB-vm_nic_info_CI_test, if it already exists from before
      scale_computing.hypercore.vm: &delete-XLAB-vm_nic_CI_test
        vm_name: XLAB-vm_nic_info_CI_test
        state: absent
      register: result

    - name: Create VM with name XLAB-vm_nic_info_CI_test
      scale_computing.hypercore.vm:
        vm_name: XLAB-vm_nic_info_CI_test
        description: Demo VM
        power_state: stop
        state: present
        machine_type: BIOS
        tags:
          - 'Xlab'
          - 'CI'
          - 'test'
        memory: 536870912
        disks: []
        nics: []
        vcpu: 2
      register: output
    - ansible.builtin.assert:
        that:
          - output is changed

    - name: Create Nic in  {{ name }}
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ name }}"
        items:
          - vlan: 1
            type: RTL8139
          - vlan: 2
            type: virtio
        state: set
      register: output
    - ansible.builtin.assert:
        that:
          - output is changed

    - name: Retrieve all Nics from {{ name }}
      scale_computing.hypercore.vm_nic_info: &Retrieve-all-Nics-on-demo-vm
        vm_name: "{{ name }}"
      register: output
    - ansible.builtin.assert:
        that:
          - output.records | length == 2
          - output.records.0.vlan == 1
          - output.records.0.type == 'RTL8139'
          - output.records.1.vlan == 2
          - output.records.1.type == 'virtio'
          - output is not changed

    - name: Retrieve vlan2 Nic from {{ name }}
      scale_computing.hypercore.vm_nic_info:
        vm_name: "{{ name }}"
        vlan: 2
      register: output
    - ansible.builtin.assert:
        that:
          - output.records | length == 1
          - output.records.0.vlan == 2
          - output.records.0.type == 'virtio'
          - output is not changed

    - name: Retrieve vlan1 Nic from {{ name }}
      scale_computing.hypercore.vm_nic_info:
        vm_name: "{{ name }}"
        vlan: 1
      register: output
    - ansible.builtin.assert:
        that:
          - output.records | length == 1
          - output.records.0.vlan == 1
          - output.records.0.type == 'RTL8139'
          - output is not changed

    - name: Delete Nic from {{ name }}
      scale_computing.hypercore.vm_nic:
        vm_name: "{{ name }}"
        items:
          - vlan: 1
            type: RTL8139
        state: absent
      register: output
    - ansible.builtin.assert:
        that:
          - output is changed

    - name: Retrieve all Nics from {{ name }}
      scale_computing.hypercore.vm_nic_info: *Retrieve-all-Nics-on-demo-vm
      register: output
    - ansible.builtin.assert:
        that:
          - output.records | length == 1
          - output.records.0.vlan == 2
          - output.records.0.type == 'virtio'
          - output is not changed

    - name: Delete VM {{ name }}
      scale_computing.hypercore.vm: *delete-XLAB-vm_nic_CI_test
      register: output
    - ansible.builtin.assert:
        that:
          - output is changed
