# ----------------------------------Cleanup------------------------------------------------------------------------
- name: Delete XLAB-vm
  scale_computing.hypercore.vm: &delete-XLAB-vm
    vm_name: "{{ item }}"
    state: absent
  loop:
    - XLAB-test-machine-type-bios
    - XLAB-test-machine-type-uefi
    - XLAB-test-machine-type-vTPM+UEFI

# ----------------------------------Job-----------------------------------------------------------------------------
- name: Make source vm - BIOS
  scale_computing.hypercore.vm:
    vm_name: XLAB-test-machine-type-bios
    memory: "{{ '1 GB'|human_to_bytes}}"
    description: "blabla"
    tags:
      - Xlab
      - Integration
    vcpu: 2
    state: present
    machine_type: BIOS
    power_state: stop
    disks:
    - type: ide_cdrom
      disk_slot: 0
    nics: []
  register: output
- ansible.builtin.assert:
    that:
      - output is changed
      - output is succeeded

- name: Retrieve XLAB-test-machine-type-bios
  scale_computing.hypercore.vm_info:
    vm_name: XLAB-test-machine-type-bios
  register: source_info
- ansible.builtin.assert:
    that:
      - source_info.records | length == 1
      - source_info.records.0.power_state == "stopped"
      - source_info.records.0.machine_type == "BIOS"
      - source_info.records.0.disks | length == 1
      - source_info.records.0.disks.0.type == "ide_cdrom"
      - source_info.records.0.disks.0.disk_slot == 0
      - source_info.records.0.vcpu == 2

- name: Make source vm - UEFI
  scale_computing.hypercore.vm:
    vm_name: XLAB-test-machine-type-uefi
    memory: "{{ '1 GB'|human_to_bytes}}"
    description: "blabla"
    tags:
      - Xlab
      - Integration
    vcpu: 2
    state: present
    machine_type: UEFI
    power_state: stop
    disks:
    - type: ide_cdrom
      disk_slot: 0
    nics: []
  register: output
- ansible.builtin.assert:
    that:
      - output is changed
      - output is succeeded

- name: Retrieve XLAB-test-machine-type-uefi
  scale_computing.hypercore.vm_info:
    vm_name: XLAB-test-machine-type-uefi
  register: source_info
- ansible.builtin.assert:
    that:
      - source_info.records | length == 1
      - source_info.records.0.power_state == "stopped"
      - source_info.records.0.machine_type == "UEFI"
      - source_info.records.0.disks | length == 1
      - source_info.records.0.disks.0.type == "ide_cdrom"
      - source_info.records.0.disks.0.disk_slot == 0
      - source_info.records.0.vcpu == 2

# TODO: vTPM+UEFI machine type is not yet supported on this API version.
# TODO: Uncomment when
#- name: Make source vm - vTPM+UEFI
#  scale_computing.hypercore.vm:
#    vm_name: XLAB-test-machine-type-vTPM+UEFI
#    memory: "{{ '1 GB'|human_to_bytes}}"
#    description: "blabla"
#    tags:
#      - Xlab
#      - Integration
#    vcpu: 2
#    state: present
#    machine_type: vTPM+UEFI
#    power_state: stop
#    disks:
#    - type: ide_cdrom
#      disk_slot: 0
#    nics: []
#  register: output
#- ansible.builtin.assert:
#    that:
#      - output is changed
#      - output is succeeded

#- name: Retrieve XLAB-test-machine-type-vTPM+UEFI
#  scale_computing.hypercore.vm_info:
#    vm_name: XLAB-test-machine-type-vTPM+UEFI
#  register: source_info
#- ansible.builtin.assert:
#    that:
#      - source_info.records | length == 1
#      - source_info.records.0.power_state == "stopped"
#      - source_info.records.0.machine_type == "vTPM+UEFI"

# ----------------------------------Idempotence check------------------------------------------------------------------------
- name: Make source vm - BIOS (Idempotence)
  scale_computing.hypercore.vm:
    vm_name: XLAB-test-machine-type-bios
    memory: "{{ '1 GB'|human_to_bytes}}"
    description: "blabla"
    tags:
      - Xlab
      - Integration
    vcpu: 2
    state: present
    machine_type: BIOS
    power_state: stop
    disks:
    - type: ide_cdrom
      disk_slot: 0
    nics: []
  register: output
- ansible.builtin.assert:
    that:
      - output is not changed
      - output is succeeded

- name: Retrieve XLAB-test-machine-type-bios (Idempotence)
  scale_computing.hypercore.vm_info:
    vm_name: XLAB-test-machine-type-bios
  register: source_info
- ansible.builtin.assert:
    that:
      - source_info.records | length == 1
      - source_info.records.0.vcpu == 2
      - source_info.records.0.power_state == "stopped"
      - source_info.records.0.disks | length == 1
      - source_info.records.0.disks.0.type == "ide_cdrom"
      - source_info.records.0.disks.0.disk_slot == 0
      - source_info.records.0.machine_type == "BIOS"

- name: Make source vm - UEFI (Idempotence)
  scale_computing.hypercore.vm:
    vm_name: XLAB-test-machine-type-uefi
    memory: "{{ '1 GB'|human_to_bytes}}"
    description: "blabla"
    tags:
      - Xlab
      - Integration
    vcpu: 2
    state: present
    machine_type: UEFI
    power_state: stop
    disks:
    - type: ide_cdrom
      disk_slot: 0
    nics: []
  register: output
- ansible.builtin.assert:
    that:
      - output is not changed
      - output is succeeded

- name: Retrieve XLAB-test-machine-type-uefi (Idempotence)
  scale_computing.hypercore.vm_info:
    vm_name: XLAB-test-machine-type-uefi
  register: source_info
- ansible.builtin.assert:
    that:
      - source_info.records | length == 1
      - source_info.records.0.vcpu == 2
      - source_info.records.0.power_state == "stopped"
      - source_info.records.0.disks | length == 1
      - source_info.records.0.disks.0.type == "ide_cdrom"
      - source_info.records.0.disks.0.disk_slot == 0
      - source_info.records.0.machine_type == "UEFI"

# TODO: vTPM+UEFI machine type is not yet supported on this API version.
# TODO: Uncomment when
#- name: Make source vm - vTPM+UEFI (Idempotence)
#  scale_computing.hypercore.vm:
#    vm_name: XLAB-test-machine-type-vTPM+UEFI
#    memory: "{{ '1 GB'|human_to_bytes}}"
#    description: "blabla"
#    tags:
#      - Xlab
#      - Integration
#    vcpu: 2
#    state: present
#    machine_type: vTPM+UEFI
#    power_state: stop
#    disks:
#    - type: ide_cdrom
#      disk_slot: 0
#    nics: []
#  register: output
#- ansible.builtin.assert:
#    that:
#      - output is not changed
#      - output is succeeded

#- name: Retrieve XLAB-test-machine-type-vTPM+UEFI
#  scale_computing.hypercore.vm_info:
#    vm_name: XLAB-test-machine-type-vTPM+UEFI
#  register: source_info
#- ansible.builtin.assert:
#    that:
#      - source_info.records | length == 1
#      - source_info.records.0.power_state == "stopped"
#      - source_info.records.0.machine_type == "vTPM+UEFI"

# ----------------------------------Cleanup------------------------------------------------------------------------
- name: Delete XLAB-vm
  scale_computing.hypercore.vm: *delete-XLAB-vm
  loop:
    - XLAB-test-machine-type-bios
    - XLAB-test-machine-type-uefi
    - XLAB-test-machine-type-vTPM+UEFI
