# ----------------------------------Cleanup------------------------------------------------------------------------
- name: Delete XLAB-vm
  scale_computing.hypercore.vm: &delete-XLAB-vm
    vm_name: "{{ item }}"
    state: absent
  loop:
    - XLAB-test-vcpu-set
    - XLAB-test-vcpu-on-create

# ----------------------------------Setup-----------------------------------------------------------------------------
- name: Make source vm
  scale_computing.hypercore.vm:
    vm_name: XLAB-test-vcpu-set 
    memory: "{{ '1 GB'|human_to_bytes}}"
    description: "blabla"
    tags:
      - Xlab
      - Integration
    vcpu: 2
    state: present
    power_state: stop
    disks:
    - type: virtio_disk
      disk_slot: 0
      size: "{{ '200 GB' | human_to_bytes }}"
    nics:
    - vlan: 0
      type: virtio
    boot_devices:
    - type: virtio_disk
      disk_slot: 0
  register: output
- ansible.builtin.assert:
    that:
      - output is changed
      - output is succeeded

- name: Retrieve XLAB-test-vcpu-set
  scale_computing.hypercore.vm_info:
    vm_name: XLAB-test-vcpu-set
  register: source_info
- ansible.builtin.assert:
    that:
      - source_info.records | length == 1
      - source_info.records.0.vcpu == 2
      - source_info.records.0.power_state == "stopped"

# ----------------------------------Job-----------------------------------------------------------------------------
- name: Change vcpu to 0
  scale_computing.hypercore.vm:
    vm_name: XLAB-test-vcpu-set
    memory: "{{ '1 GB'|human_to_bytes}}"
    description: "retesting"
    vcpu: 0
    state: present
    power_state: stop
    disks:
    - type: virtio_disk
      disk_slot: 0
      size: "{{ '200 GB' | human_to_bytes }}"
    nics:
    - vlan: 0
      type: virtio
    boot_devices:
    - type: virtio_disk
      disk_slot: 0
  register: output
- ansible.builtin.assert:
    that:
      - output is changed
      - output is succeeded

- name: output the HTTP request results
  debug:
    var: output

- name: Retrieve XLAB-test-vcpu-set
  scale_computing.hypercore.vm_info:
    vm_name: XLAB-test-vcpu-set
  register: changed_info
- ansible.builtin.assert:
    that:
      - changed_info.records | length == 1
      - changed_info.records.0.vcpu == 0
      - changed_info.records.0.power_state == "stopped"

# ----------------------------------Job-----------------------------------------------------------------------------
- name: Make VM with 0 cpu
  scale_computing.hypercore.vm:
    vm_name: XLAB-test-vcpu-on-create
    memory: "{{ '1 GB'|human_to_bytes}}"
    description: "blabla"
    tags:
      - Xlab
      - Integration
    vcpu: 0
    state: present
    power_state: stop
    disks:
    - type: virtio_disk
      disk_slot: 0
      size: "{{ '200 GB' | human_to_bytes }}"
    nics:
    - vlan: 0
      type: virtio
    boot_devices:
    - type: virtio_disk
      disk_slot: 0
  register: output
- ansible.builtin.assert:
    that:
      - output is changed
      - output is succeeded

- name: Retrieve XLAB-test-vcpu-on-create
  scale_computing.hypercore.vm_info:
    vm_name: XLAB-test-vcpu-on-create
  register: source_info
- ansible.builtin.assert:
    that:
      - source_info.records | length == 1
      - source_info.records.0.vcpu == 0
      - source_info.records.0.power_state == "stopped"

# ----------------------------------Cleanup------------------------------------------------------------------------
- name: Delete XLAB-vm
  scale_computing.hypercore.vm: *delete-XLAB-vm
  register: output
  loop:
    - XLAB-test-vcpu-set
    - XLAB-test-vcpu-on-create
- ansible.builtin.assert:
    that:
      - output is changed
