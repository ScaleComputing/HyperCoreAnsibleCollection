# Remove any old test VM

# First set power_state to STOP, can't delete VM if it's running.
- name: Retrieve XLAB-vm_clone_CI-test-running
  scale_computing.hypercore.vm_info:
    vm_name: XLAB-vm_clone-CI_test-running
  register: source_running_info

# We ignore errors here, if VMs were already deleted
- name: set XLAB-vm_clone-CI_test-running to power_state SHUTDOWN
  scale_computing.hypercore.api:
    action: post_list
    endpoint: /rest/v1/VirDomain/action
    data:
      virDomainUUID: "{{ source_running_info.records.0.uuid }}"
      actionType: STOP
      nodeUUID: ""
      cause: INTERNAL
  register: set_to_run_task
  when: source_running_info.records

- name: Wait for the VM to be set to SHUTDOWN
  scale_computing.hypercore.task_wait:
    task_tag: "{{ set_to_run_task.record }}"
  when: set_to_run_task.record | default("")

- name: Delete XLAB-vm_clone-CI_test
  scale_computing.hypercore.vm:
    vm_name: "{{ item }}"
    state: absent
    memory: 536870912
    vcpu: 2
  loop:
    - XLAB-vm_clone-CI_test
    - XLAB-vm_clone-CI_test-running
    - XLAB-vm_clone_CI-test-clone
    - XLAB-vm_clone_CI-test-cloud_init-clone
    - XLAB-vm_clone-while-running-test-clone
    - XLAB-vm_clone_CI-test-preserve-mac-clone
    - XLAB-vm_clone_CI-test-clone-from-snapshot-source
    - XLAB-vm_clone_CI-test-clone-from-snapshot-clone
    - XLAB-vm_clone_CI-test-clone-from-snapshot-clone-2
