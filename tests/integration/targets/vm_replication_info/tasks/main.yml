---
- environment:
    SC_HOST: "https://10.5.11.30"
    SC_USERNAME: "admin"
    SC_PASSWORD: "admin"

  block:
    - name: Delete XLAB-vm_replication_info_CI_test
      scale_computing.hypercore.vm: &delete-XLAB-vm_nic_CI_test
        vm_name: XLAB-vm_replication_info_CI_test
        state: absent
        memory: 536870912
        vcpu: 2

    - name: Create a VM
      scale_computing.hypercore.api:
        action: post
        endpoint: /rest/v1/VirDomain
        data:
          dom:
            name: XLAB-vm_replication_info_CI_test
            tags: Xlab,CI,test,vm_replication_info
            mem: 512100100
            numVCPU: 2
            blockDevs:
              - type: VIRTIO_DISK
                capacity: 8100100100
                name: jc1-disk-0
            netDevs:
              - type: RTL8139
                vlan: 0
                connected: true
          options:
            attachGuestToolsISO: true
      register: vm_created
    - ansible.builtin.assert:
        that:
          - vm_created is changed
  
    - name: Wait for the VM to be created
      scale_computing.hypercore.task_wait:
        task_tag: "{{vm_created.record}}"
  
    - name: Get available cluster connection
      scale_computing.hypercore.api:
        action: get
        endpoint: /rest/v1/RemoteClusterConnection
      register: cluster_connection_info
    - ansible.builtin.assert:
        that:
          - cluster_connection_info.record | length > 0
  
    - name: Create replication
      scale_computing.hypercore.api:
        action: post
        endpoint: /rest/v1/VirDomainReplication
        data:
          sourceDomainUUID: "{{vm_created.record.createdUUID}}"
          connectionUUID: "{{cluster_connection_info.record.0.uuid}}"
          enable: true
          label: "vm_replication_info test"
      register: replication_created
    - ansible.builtin.assert:
        that:
          - replication_created is changed
  
    - name: Wait for the replication to be created
      scale_computing.hypercore.task_wait:
        task_tag: "{{replication_created.record}}"
  
    - name: Get replication info
      scale_computing.hypercore.vm_replication_info:
        vm_name: XLAB-vm_replication_info_CI_test
      register: replication_info
    - ansible.builtin.assert:
        that:
          - replication_info is not changed
          - replication_info.records
          - replication_info.records.vm_name == 'XLAB-vm_replication_info_CI_test'
          - replication_info.records.state == 'enabled'
  
    - name: Delete XLAB-vm_replication_info_CI_test
      scale_computing.hypercore.vm: *delete-XLAB-vm_nic_CI_test
      register: output
    - ansible.builtin.assert:
        that:
          - output is changed
