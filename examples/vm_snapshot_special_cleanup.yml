---
- name: Example - delete all snapshots with label "TEST" and type "USER".
  hosts: localhost
  connection: local
  gather_facts: false
  environment:
    SC_HOST: "your_host"
    SC_USERNAME: "your_username"
    SC_PASSWORD: "your_password"

  tasks:
  # ------------------------------------------------------
    - name: List all snapshots
      scale_computing.hypercore.vm_snapshot_info:
      register: snapshot_results

    - name: Create filtered_snapshots list
      set_fact:
        filtered_snapshots: []

    - name: Loop through snapshots and add snapshots with label 'TEST' and type 'USER' to filtered_snapshots
      set_fact:
        filtered_snapshots: "{{ filtered_snapshots + [ item ] }}"
      when: "{{ item.label  == 'TEST' and item.type == 'USER' }}"
      loop: "{{ snapshot_results.records }}"
      no_log: true

    - name: Show only snapshots with label "TEST" and type "USER"
      ansible.builtin.debug:
        var: filtered_snapshots

    # We could reuse "filtered_snapshots" here instead of "snapshot_results" and avoid the "when" statement.
    # But leaving it as is for example purposes.
    # Since this is the only mandatory task of the playbook, can be copy-pasted and reused as standalone task.
    - name: Loop through list of snapshots delete if label is 'TEST' and type is 'USER'
      scale_computing.hypercore.vm_snapshot:
        vm_name: "{{ item.vm.name }}"
        label: "{{ item.label }}"
        state: absent
      when: "{{ item.label  == 'TEST' and item.type == 'USER' }}"
      loop: "{{ snapshot_results.records }}"

    - name: List all snapshots - second time
      scale_computing.hypercore.vm_snapshot_info:
      register: snapshot_results

    - name: Create filtered_snapshots list - second time
      set_fact:
        filtered_snapshots: []

    - name: Loop through snapshots and add snapshots with label 'TEST' and type 'USER' to filtered_snapshots - second time
      set_fact:
        filtered_snapshots: "{{ filtered_snapshots + [ item ] }}"
      when: "{{ item.label  == 'TEST' and item.type == 'USER' }}"
      loop: "{{ snapshot_results.records }}"
      no_log: true

    - name: Show only snapshots with label 'TEST' and type 'USER' - second time
      ansible.builtin.debug:
        var: filtered_snapshots
