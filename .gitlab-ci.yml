---
image: python:3.8.12-slim-buster # TODO gitlab registry

# TODO reuse Makefile - "make sanity", and docker dind.

variables:
  # SC_HOST: https://10.5.11.30  # provide value in gitlab CI/CD settings
  SC_USERNAME: admin
  # SC_PASSWORD:  # provide value in gitlab CI/CD settings

stages:
  - test
  - build # build collection tar.gz
  - deploy # push collection tar.gz to galaxy

before_script:
  - pip3 install -r sanity.requirements -r test.requirements -r docs.requirements
  - apt update
  - apt install -y git shellcheck make

coverage:
  stage: test
  image: python:3.8.12-slim-buster
  script:
    - pip install ansible-core==2.13.1
    # ansible-test needs special directory structure.
    - mkdir -p /work-dir/ansible_collections/scale_computing/
    - cp -a ./  /work-dir/ansible_collections/scale_computing/hypercore
    - pushd /work-dir/ansible_collections/scale_computing/hypercore
    #
    # - ansible-test coverage erase --venv
    # Use venv, until we agree about dind - eventually we need to move to github anyway?
    - ansible-test units --coverage
    - ansible-test coverage html --requirements
    - ansible-test coverage report --omit 'tests/*' --show-missing
    - ls -al tests/output/reports/coverage
    #
    # Move artifacts back to initial dir, so they can be collected by gitlab.
    - popd
    - ART_DIR=tests/output/reports/coverage/
    - mkdir -p $ART_DIR
    - cp -a /work-dir/ansible_collections/scale_computing/hypercore/$ART_DIR $ART_DIR
    - ls -al $ART_DIR
  artifacts:
    name: hypercore_html_coverage
    paths:
      - tests/output/reports/coverage
    expose_as: html_coverage
    expire_in: 10 week

sanity:
  stage: test
  image: python:3.8.12-slim-buster
  script:
    - pip install ansible-core==2.13.1
    # ansible-test needs special directory structure.
    - mkdir -p /work-dir/ansible_collections/scale_computing/
    - cp -a ./  /work-dir/ansible_collections/scale_computing/hypercore
    - pushd /work-dir/ansible_collections/scale_computing/hypercore
    #
    # Same as "make sanity"
    # TODO reuse Makefile
    - black -t py38 --check --diff --color plugins tests/unit
    - ansible-lint
    - flake8 --exclude tests/output/
    - ansible-test sanity

docs:
  stage: test
  image: python:3.8.12-slim-buster
  script:
    # ansible-test needs special directory structure.
    - mkdir -p /work-dir/ansible_collections/scale_computing/
    - cp -a ./  /work-dir/ansible_collections/scale_computing/hypercore
    - pushd /work-dir/ansible_collections/scale_computing/hypercore
    #
    - make docs
    #
    # Move artifacts back to initial dir, so they can be collected by gitlab.
    - popd
    - ART_DIR=docs/build/html
    - mkdir -p $ART_DIR
    - cp -a /work-dir/ansible_collections/scale_computing/hypercore/$ART_DIR $ART_DIR
    - ls -al $ART_DIR
  artifacts:
    name: hypercore_html_docs
    paths:
      - docs/build/html/
    expose_as: html_docs
    expire_in: 10 week

integration:
  stage: test
  image: python:3.8.12-slim-buster
  # we have a single HC3 cluster, so run at most one "ansible-test integration" at a time.
  resource_group: hc3_cluster_0
  script:
    - pip install ansible-core==2.13.1
    # ansible-test needs special directory structure.
    - mkdir -p /work-dir/ansible_collections/scale_computing/
    - cp -a ./  /work-dir/ansible_collections/scale_computing/hypercore
    - pushd /work-dir/ansible_collections/scale_computing/hypercore
    #
    - |
      cat <<EOF >tests/integration/integration_config.yml
      # Generated by .gitlab-ci.yml
      sc_host: ${SC_HOST}
      sc_username: ${SC_USERNAME}
      sc_password: ${SC_PASSWORD}
      smb_server: ${SMB_SERVER}
      smb_share: ${SMB_SHARE}
      smb_username: ${SMB_USERNAME}
      smb_password: ${SMB_PASSWORD}
      EOF
    - cat tests/integration/integration_config.yml
    - ansible-test integration
