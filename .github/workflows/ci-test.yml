name: CI tests
on:
  - push
env:
  WORKDIR: /work-dir/ansible_collections/scale_computing/hypercore
jobs:
  docs:
    runs-on: [self-hosted]
    container: python:3.10-slim-buster
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: pip3 install -r sanity.requirements -r test.requirements -r docs.requirements
      - run: apt update
      - run: apt install -y git make
        # ansible-test needs special directory structure.
      - run: mkdir -p $WORKDIR
      - run: cp -a ./  $WORKDIR
        #
      - run: cd $WORKDIR && make docs
      - run: cd $WORKDIR && ls -al docs/build/html

  sanity-test:
    runs-on: [self-hosted]
    container: python:3.10-slim-buster
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: pip3 install -r sanity.requirements -r test.requirements -r docs.requirements
      - run: apt update
      - run: apt install -y git make
      - run: pip install ansible-core==2.13.1
        # ansible-test needs special directory structure.
      - run: mkdir -p $WORKDIR
      - run: cp -a ./  $WORKDIR
        # Same as "make sanity"
        # TODO reuse Makefile
      - run: cd $WORKDIR && black -t py38 --check --diff --color plugins tests/unit
      - run: cd $WORKDIR && ansible-lint
      - run: cd $WORKDIR && flake8 --exclude tests/output/
      - run: cd $WORKDIR && ansible-test sanity

  units-test:
    runs-on: [self-hosted]
    container: python:3.10-slim-buster
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: pip3 install -r sanity.requirements -r test.requirements -r docs.requirements
      - run: apt update
      - run: apt install -y git make
      - run: pip install ansible-core==2.13.1
        # ansible-test needs special directory structure.
      - run: mkdir -p $WORKDIR
      - run: cp -a ./  $WORKDIR
        # Same as "make units"
        # TODO reuse Makefile
      - run: cd $WORKDIR && ansible-test units --coverage
      - run: cd $WORKDIR && ansible-test coverage html --requirements
      - run: cd $WORKDIR && ansible-test coverage report --omit 'tests/*' --show-missing

  integration-prepare-env:
    runs-on: [self-hosted]
    container: python:3.10-slim-buster
    env:
      SC_HOST: ${{ secrets.SC_HOST }}
      SC_USERNAME: ${{ secrets.SC_USERNAME }}
      SC_PASSWORD: ${{ secrets.SC_PASSWORD }}
      ANSIBLE_COLLECTIONS_PATH: /work-dir
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      matrix2: ${{ steps.set-matrix2.outputs.matrix2 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: pip3 install -r sanity.requirements -r test.requirements -r docs.requirements
      - run: apt update
      - run: apt install -y git make
      - run: pip install ansible-core==2.13.1
      - run: apt install -y genisoimage
      - run: apt install -y jq
      - run: mkdir -p $WORKDIR
      - run: cp -a ./  $WORKDIR
      - run: ansible-galaxy collection install community.general
      - run: |
          cat <<EOF >$WORKDIR/tests/integration/integration_config.yml
          # Generated by .gitlab-ci.yml
          sc_host: ${SC_HOST}
          sc_username: ${SC_USERNAME}
          sc_password: ${SC_PASSWORD}
          EOF
      - run: cd $WORKDIR && ls -al tests/integration/integration_config.yml
      - run: cd $WORKDIR && ansible-playbook tests/integration/prepare/prepare_vm.yml
      - run: cd $WORKDIR && ansible-playbook tests/integration/prepare/prepare_iso.yml
      - id: set-matrix
        run: echo "::set-output name=matrix::$(ls $WORKDIR/tests/integration/targets | jq -R -s -c 'split("\n")[:-1]')"
      - id: set-matrix2
        run: echo "matrix2=$(ls $WORKDIR/tests/integration/targets | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  integration-test:
    needs:
      - integration-prepare-env
    runs-on: [self-hosted]
    container: python:3.10-slim-buster
    env:
      SC_HOST: ${{ secrets.SC_HOST }}
      SC_USERNAME: ${{ secrets.SC_USERNAME }}
      SC_PASSWORD: ${{ secrets.SC_PASSWORD }}
      SMB_SERVER: ${{ secrets.SMB_SERVER }}
      SMB_SHARE: ${{ secrets.SMB_SHARE }}
      SMB_USERNAME: ${{ secrets.SMB_USERNAME }}
      SMB_PASSWORD: ${{ secrets.SMB_PASSWORD }}
    strategy:
      matrix:
        test_name: ${{ fromJson(needs.integration-prepare-env.outputs.matrix) }}
        test_name2: ${{ fromJson(needs.integration-prepare-env.outputs.matrix2) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: pip3 install -r sanity.requirements -r test.requirements -r docs.requirements
      - run: apt update
      - run: apt install -y git make
      - run: apt install -y genisoimage
      - run: pip install ansible-core==2.13.1
      - run: mkdir -p $WORKDIR
      - run: cp -a ./  $WORKDIR
      - run: |
          cat <<EOF >$WORKDIR/tests/integration/integration_config.yml
          # Generated by .gitlab-ci.yml
          sc_host: ${SC_HOST}
          sc_username: ${SC_USERNAME}
          sc_password: ${SC_PASSWORD}
          smb_server: ${SMB_SERVER}
          smb_share: ${SMB_SHARE}
          smb_username: ${SMB_USERNAME}
          smb_password: ${SMB_PASSWORD}
          EOF
      - run: echo "${{ matrix.test_name2 }}"
      - run: cd $WORKDIR && ls -al tests/integration/integration_config.yml
      - run: cd $WORKDIR && ansible-test integration ${{ matrix.test_name }}

  replica_cleanup:
    needs:
      - integration-test
    runs-on: [self-hosted]
    container: python:3.10-slim-buster
    env:
      SC_HOST: ${{ secrets.SC_HOST }}
      SC_USERNAME: ${{ secrets.SC_USERNAME }}
      SC_PASSWORD: ${{ secrets.SC_PASSWORD }}
      SC_REPLICATION_DEST_HOST: ${{ secrets.SC_REPLICATION_DEST_HOST }}
      SC_REPLICATION_DEST_USERNAME: ${{ secrets.SC_REPLICATION_DEST_USERNAME }}
      SC_REPLICATION_DEST_PASSWORD: ${{ secrets.SC_REPLICATION_DEST_PASSWORD }}
      ANSIBLE_COLLECTIONS_PATH: /work-dir
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: pip3 install -r sanity.requirements -r test.requirements -r docs.requirements
      - run: apt update
      - run: apt install -y git make
      - run: pip install ansible-core==2.13.1
        # ansible-test needs special directory structure.
      - run: mkdir -p $WORKDIR
      - run: cp -a ./  $WORKDIR
      - run: ansible-galaxy collection install community.general
      - run: cd $WORKDIR && ansible-playbook tests/integration/cleanup/ci_replica_cleanup.yml

  smb_cleanup:
    needs:
      - integration-test
    runs-on: [self-hosted]
    container: python:3.10-slim-buster
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: apt update
      - run: apt install -y git make
      - run: apt install -y smbclient
      - run: mkdir -p $WORKDIR
      - run: cp -a ./  $WORKDIR
      - run: cd $WORKDIR/tests/integration/cleanup && ./smb_cleanup.sh ${{ secrets.SMB_SERVER }} ${{ secrets.SMB_SHARE }} "${{ secrets.SMB_USERNAME }}" ${{ secrets.SMB_PASSWORD }}